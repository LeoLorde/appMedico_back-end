swagger: "2.0"
info:
  title: API de Clientes
  version: 1.0.0
  description: Documentação da API para gerenciamento de clientes

servers:
  - url: http://localhost:5000

paths:
  /client/create:
    post:
      summary: Criar um novo cliente
      tags:
        - Client
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                cpf:
                  type: string
                dataDeNascimento:
                  type: string
                  format: date
                genero:
                  type: string
                senha:
                  type: string
      responses:
        '201':
          description: Cliente criado com sucesso
        '400':
          description: Dados inválidos

  /client/login:
    post:
      summary: Login do cliente
      tags:
        - Client
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                senha:
                  type: string
      responses:
        '200':
          description: Login bem-sucedido
        '404':
          description: Usuário não encontrado
        '400':
          description: Credenciais inválidas

  /client/{limit}:
    get:
      summary: Buscar todos os clientes com limite
      tags:
        - Client
      parameters:
        - in: path
          name: limit
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Lista de clientes
        '404':
          description: Nenhum cliente encontrado

  /client/id/{id}:
    get:
      summary: Buscar cliente por ID
      tags:
        - Client
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Cliente encontrado
        '404':
          description: Cliente não encontrado

  /client/username/{username}/{limit}:
    get:
      summary: Buscar clientes por username
      tags:
        - Client
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
        - in: path
          name: limit
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Lista de clientes encontrados
        '404':
          description: Nenhum cliente encontrado

  /client/update/{id}:
    put:
      summary: Atualizar cliente
      tags:
        - Client
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
                cpf:
                  type: string
                dataDeNascimento:
                  type: string
                gender:
                  type: string
      responses:
        '200':
          description: Cliente atualizado com sucesso
        '404':
          description: Cliente não encontrado

  /client/delete/{id}:
    delete:
      summary: Deletar cliente
      tags:
        - Client
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Cliente deletado com sucesso
        '404':
          description: Cliente não encontrado

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
